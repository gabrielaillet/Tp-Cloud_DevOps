networks:
  back-tier:
    internal: true
  front-tier:
    internal: false

services:
  v1:
    build: ./vote
    ports:
      - "5001:5000"
    depends_on:
      - redis
      - db
    networks:
      - front-tier
      - back-tier

  v2:
    build: ./vote
    ports:
      - "5002:5000"
    depends_on:
      - redis
      - db
    networks:
      - front-tier
      - back-tier

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 8000:80
    networks:
      - front-tier
      - back-tier  # Add this line if communication across both networks is neede
    depends_on:
      - v1
      - v2

  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - back-tier
    # volumes:
    #   - ./healthcheks/:/healthcheks/
    # command: ./healthcheks/redis.sh
  db:
    image: postgres:15-alpine
    container_name: db
    networks:
      - back-tier
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data/
    # command: ./healthcheks/postgres.sh
    ports:
      - "5432:5432"

  seed:
    build: ./seed-data
    networks:
      - front-tier
    depends_on:
      - nginx

  worker:
    build:
      context: ./worker
      args:
        TARGETARCH: amd64
        TARGETPLATFORM: linux/amd64
        BUILDPLATFORM: linux/amd64
    depends_on:
      - redis
      - db
    networks:
      - back-tier
  result:
    build: ./result
    depends_on:
      - db
    networks:
      - back-tier
      - front-tier
    ports:
      - 4000:4000
volumes:
  db-data:
    name: my-db-data
